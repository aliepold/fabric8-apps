spring.main.sources = de.aliepold.fabric8.jsf.example

logging.config=classpath:logback.xml

name: Alex
server.port:9090
servlet.container.maxThreads:513



# The name of the Camel app
camel.springboot.name=JsfCamelActiveMQ

# Keeps the application alive
camel.springboot.main-run-controller=true

# The name of the service hosting the ActiveMQ broker or message gateway
# Can be customized using the 'ACTIVEMQ_SERVICE_NAME' variable to use a different broker.
activemq.service.name=activemq

# The following properties can be customized using the 'ACTIVEMQ_SERVICE_HOST' and 'ACTIVEMQ_SERVICE_PORT' environment variables.
# This is indeed done automatically by Kubernetes when the application is deployed in a namespace containing an instance of ActiveMQ named 'activemq'.
# The service defaults to localhost. You need to change these properties for development purposes only.
activemq.service.host=activemq.ubuntu.local
activemq.service.port=61616


# The following property binds all previous configurations together
#activemq.broker.url=tcp://${activemq.service.host}:${activemq.service.port}
activemq.broker.url=tcp://activemq.ubuntu.local:61616

# Set the number of concurrent consumers for the ActiveMQ ('ACTIVEMQ_CONCURRENT_CONSUMERS')
activemq.concurrent.consumers=10

# Set the number of connections created by the connection pool ('ACTIVEMQ_POOL_MAX_CONNECTIONS')
activemq.pool.max.connections=8

# If required, you can set the broker credentials using environment variables.
# Variable names are 'ACTIVEMQ_BROKER_USERNAME' and 'ACTIVEMQ_BROKER_PASSWORD'.
#activemq.broker.username=theuser
#activemq.broker.password=thepassword